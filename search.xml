<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>如何写一篇博客</title>
      <link href="/BlogTest/2023/03/25/%E5%A6%82%E4%BD%95%E5%86%99%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/"/>
      <url>/BlogTest/2023/03/25/%E5%A6%82%E4%BD%95%E5%86%99%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[<h1 id="零、前言"><a href="#零、前言" class="headerlink" title="零、前言"></a>零、前言</h1><p>此文用于尽力教会别人怎么写blog和提醒自己怎么写blog，内容有格式之类的内容，当作文件记录吧；（2023年3月25日）要认真考虑下哪些内容放到OneNote上，那些内容写成blog，不然信息太分散杂乱影响后续</p><h1 id="一、初始化一篇新的博客"><a href="#一、初始化一篇新的博客" class="headerlink" title="一、初始化一篇新的博客"></a>一、初始化一篇新的博客</h1><h2 id="1-新建命令"><a href="#1-新建命令" class="headerlink" title="1.新建命令"></a>1.新建命令</h2><p><code>hexo new [layout] &#39;title&#39;</code><br>layout：文章的布局，默认为<code>post</code>，可通过修改_config.yml中的<code>default——layout</code>修改默认布局；<br>布局格式有<code>post</code>、<code>page</code>、<code>draft</code>, 应该是指不同类型的文章，<code>draft</code>指的是草稿,<code>post</code>保存到：<code>source/_posts</code>,<code>page</code>保存到：<code>source</code>,<code>draft</code>保存到<code>source/_drafts</code>；自定义的其他布局和 post 相同，都将储存到 <code>source/_posts</code> 文件夹。</p><p>新建完成后，即可在对应的文件夹中打开相应的.md文件进行编写</p><h2 id="2-文本编辑器"><a href="#2-文本编辑器" class="headerlink" title="2.文本编辑器"></a>2.文本编辑器</h2><p>目前使用的是VScode，考虑安装插件 来辅助写作</p><h2 id="3-Front-matter"><a href="#3-Front-matter" class="headerlink" title="3.Front-matter"></a>3.Front-matter</h2><p><strong>Front-matter</strong>为文件最上方以<code>---</code>为分割的区域，用来指定此档案的特性，分为Page Front-matter和Post Front-matter，前者用于页面，后者用于文章页；不需要的可以不用填写<br><strong>Page Front-matter</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title:              #（必须）标题</span><br><span class="line">date:               #（必须）页面创建日期</span><br><span class="line">type:               #（必须）标签、分类和链接</span><br><span class="line">updated:            #（可选）页面更新日期</span><br><span class="line">comments:           #</span><br><span class="line">description:        #（可选）页面描述</span><br><span class="line">keywords:           #（可选）页面关键字</span><br><span class="line">top_img:            #（可选）页面顶部图片</span><br><span class="line">mathjax:            #（可选）显示mathjax（要设置里的配置）</span><br><span class="line">katex:              #（可选）</span><br><span class="line">aside:              #（可选）</span><br><span class="line">aplayer:            #（可选）</span><br><span class="line">highlight_shrink:   #（可选）</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p><strong>Post Front-matter</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title:                    #（必须）标题</span><br><span class="line">date:                     #（必须）页面创建日期</span><br><span class="line">updated:                  #（可选）文章更新日期</span><br><span class="line">tags:                     #</span><br><span class="line">categories:               #</span><br><span class="line">keywords:                 #</span><br><span class="line">description:              #(可选)文章描述</span><br><span class="line">top_img:                  #</span><br><span class="line">comments:                 #</span><br><span class="line">cover:                    #</span><br><span class="line">toc:                      #为此篇文章配置TOC(目录)，优先判断文章的，后面才是主题的</span><br><span class="line">toc_number:               #</span><br><span class="line">toc_style_simple:         #</span><br><span class="line">copyright:                #</span><br><span class="line">copyright_author:         #</span><br><span class="line">copyright_author_href:    #</span><br><span class="line">copyright_url:            #</span><br><span class="line">copyright_info:           #</span><br><span class="line">mathjax:                  #</span><br><span class="line">katex:                    #</span><br><span class="line">aplayer:                  #</span><br><span class="line">highlight_shrink:         # </span><br><span class="line">aside:                    #</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>文章版权：在Front-matter中单独设置</p><h1 id="二、撰写内容"><a href="#二、撰写内容" class="headerlink" title="二、撰写内容"></a>二、撰写内容</h1><h2 id="1-Markdown语法"><a href="#1-Markdown语法" class="headerlink" title="1.Markdown语法"></a>1.Markdown语法</h2><p>Markdown语法是 于2004年</p><p>（1）标题：</p><p>（2）引用：</p><p>（3）图片和链接：</p><p>（4）代码：</p><p>（5）表格：</p><p>（6）文字：前后<code>~~</code>为删除文本</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">~~删除文本~~</span><br></pre></td></tr></table></figure><h1 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h1><p><a href="https://hexo.io/zh-cn/docs/writing">https://hexo.io/zh-cn/docs/writing</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> blog </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>主题的魔改缝合之路</title>
      <link href="/BlogTest/2023/03/24/%E4%B8%BB%E9%A2%98%E7%9A%84%E9%AD%94%E6%94%B9%E4%B9%8B%E8%B7%AF/"/>
      <url>/BlogTest/2023/03/24/%E4%B8%BB%E9%A2%98%E7%9A%84%E9%AD%94%E6%94%B9%E4%B9%8B%E8%B7%AF/</url>
      
        <content type="html"><![CDATA[<h1 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h1><p>看了很多很多主题模板，有的有自己动心之处，但是又不是全部让人满意；思来想去，还是自己魔改一个吧；很多功能应该是从其他地方看到了觉得好就缝合过来了<br>此文章可能要花很多时间才能更新完成……<br>（2023年3月24日）又挖了一个坑……，不过本来就是计划中的内容</p><h1 id="二、基础框架"><a href="#二、基础框架" class="headerlink" title="二、基础框架"></a>二、基础框架</h1><h1 id="三、实现基础功能"><a href="#三、实现基础功能" class="headerlink" title="三、实现基础功能"></a>三、实现基础功能</h1><h2 id="x-标签页："><a href="#x-标签页：" class="headerlink" title="x. 标签页："></a>x. 标签页：</h2><h2 id="x-分类页："><a href="#x-分类页：" class="headerlink" title="x. 分类页："></a>x. 分类页：</h2><p>发现安装的plugins好像不能同步……<br>安装的插件有：<br>pug和stylus的渲染器：<code>npm install hexo-renderer-pug hexo-renderer-stylus --save</code><br>本地搜索（<strong>不是Algolia！！！</strong>）：<code>npm install hexo-generator-search --save</code><br>字数统计：<code>npm install hexo-wordcount --save</code></p><p>待补充）</p><h1 id="四、主题本身功能的添加修改部分"><a href="#四、主题本身功能的添加修改部分" class="headerlink" title="四、主题本身功能的添加修改部分"></a>四、主题本身功能的添加修改部分</h1><h2 id="主页："><a href="#主页：" class="headerlink" title="主页："></a>主页：</h2><p>修改subtitles：<code>&amp;#44</code>代表逗号（源自html转义字符）<br>加载动画：<code>preloader</code>，具体查看：<a href="https://codebyzach.github.io/pace/">https://codebyzach.github.io/pace/</a></p><p>导航菜单：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Home: / || fas fa-home</span><br><span class="line">Archives: /archives/ || fas fa-archive</span><br><span class="line">Tags: /tags/ || fas fa-tags</span><br><span class="line">Categories: /categories/ || fas fa-folder-open</span><br><span class="line">List||fas fa-list:</span><br><span class="line">Music: /music/ || fas fa-music</span><br><span class="line">Movie: /movies/ || fas fa-video</span><br><span class="line">Link: /link/ || fas fa-link</span><br><span class="line">About: /about/ || fas fa-heart</span><br></pre></td></tr></table></figure><p>问题：怎么知道有哪些图标？自己如何创建图标？Answer: <a href="https://fontawesome.com/start" title="Font Awesome">Font Awesome</a> 的小图标，可以自己 DIY， 里面的免费源中寻找合适的，然后修改<code>fa-</code>后面的单词。</p><h2 id="滚动状态百分比："><a href="#滚动状态百分比：" class="headerlink" title="滚动状态百分比："></a>滚动状态百分比：</h2><p>主题配置文件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># show scroll percent in scroll-to-top button</span><br><span class="line">  rightside_scroll_percent: true</span><br></pre></td></tr></table></figure><p>研究下怎么魔改成自己想要的动画</p><h2 id="Gallary相册："><a href="#Gallary相册：" class="headerlink" title="Gallary相册："></a>Gallary相册：</h2><p><strong>网上全是抄来抄去的，根本看不懂要放在哪里，没有说清楚操作方法……</strong><br>没看懂要在哪输入，网页本身？：</p><p>先使用命令建立Gallery相册:<code>hexo n page Gallery</code>；此时会在source目录下生成Gallery文件夹，里面有个index文件；再在此文件中输入,根据相册添加{}内 的条目：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;gallery-group-main&quot;&gt;</span><br><span class="line">&#123;% galleryGroup name description link img-url %&#125;</span><br><span class="line">e.g.:&#123;% galleryGroup &#x27;OH MY GIRL&#x27; &#x27;关于OH MY GIRL的图片&#x27; &#x27;/Gallery/Oh My Girl&#x27; https://i.loli.net/2019/12/25/hOqbQ3BIwa6KWpo.jpg %&#125;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>再在此文件夹内创建一个文件夹，命名和相册名相同；其内部创建：<code>index.md</code>，输入：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% gallery [lazyload],[rowHeight],[limit] %&#125;</span><br><span class="line">markdown 图片格式</span><br><span class="line">&#123;% endgallery %&#125;</span><br></pre></td></tr></table></figure><p><code>lazyload</code>：(可选)点击按钮加载更多图片，true&#x2F;false，默认false<br><code>rowHeight</code>：（可选）图片显示的高度，若要一行显示更多，可设置更小的数字，默认220<br><code>limit</code>：（可选）每次加载图片数量，默认10<br>e.g.:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;% gallery %&#125;//此行不必输入</span><br><span class="line">![](https://i.loli.net/2019/12/25/Fze9jchtnyJXMHN.jpg)</span><br><span class="line">![](https://i.loli.net/2019/12/25/ryLVePaqkYm4TEK.jpg)</span><br><span class="line">![](https://i.loli.net/2019/12/25/gEy5Zc1Ai6VuO4N.jpg)</span><br><span class="line">![](https://i.loli.net/2019/12/25/d6QHbytlSYO4FBG.jpg)</span><br><span class="line">![](https://i.loli.net/2019/12/25/6nepIJ1xTgufatZ.jpg)</span><br><span class="line">![](https://i.loli.net/2019/12/25/E7Jvr4eIPwUNmzq.jpg)</span><br><span class="line">![](https://i.loli.net/2019/12/25/mh19anwBSWIkGlH.jpg)</span><br><span class="line">![](https://i.loli.net/2019/12/25/2tu9JC8ewpBFagv.jpg)</span><br><span class="line">&#123;% endgallery %&#125;//此行不必输入</span><br></pre></td></tr></table></figure><p>另一种方法：<a href="https://blog.csdn.net/weixin_42529972/article/details/109485019'%E4%B8%8D%E7%9F%A5%E5%A5%BD%E4%B8%8D%E5%A5%BD%E4%BD%BF'">应该是原始的方法</a>；</p><h2 id="数据统计："><a href="#数据统计：" class="headerlink" title="数据统计："></a>数据统计：</h2><p>文章meta显示：显示文章相关信息，修改<strong>主题配置文件</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">post_meta:</span><br><span class="line">  page:</span><br><span class="line">    date_type: both # created or updated or both 主页文章日期是创建日或者更新日或都显示</span><br><span class="line">    date_format: relative # date/relative 显示日期还是相对日期</span><br><span class="line">    categories: true # true or false 主页是否显示分类</span><br><span class="line">    tags: true # true or false 主页是否显示标签</span><br><span class="line">    label: true # true or false 显示描述性文字</span><br><span class="line">  post:</span><br><span class="line">    date_type: both # created or updated or both 文章页日期是创建日或者更新日或都显示</span><br><span class="line">    date_format: relative # date/relative 显示日期还是相对日期</span><br><span class="line">    categories: true # true or false 文章页是否显示分类</span><br><span class="line">    tags: true # true or false 文章页是否显示标签</span><br><span class="line">    label: true # true or false 显示描述性文字</span><br></pre></td></tr></table></figure><p>(补充一张图说明)</p><p>目前还不知道如何把访问人数的显示的前缀标题改为中文的，看教程没看懂；后面看到这个：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"># Show PV/UV of the website/page with busuanzi.</span><br><span class="line"># Get more information on http://ibruce.info/2015/04/04/busuanzi/</span><br><span class="line">busuanzi_count:</span><br><span class="line">  # count values only if the other configs are false</span><br><span class="line">  enable: true</span><br><span class="line">  # custom uv span for the whole site</span><br><span class="line">  site_uv: true</span><br><span class="line">  site_uv_header: 访客数</span><br><span class="line">  site_uv_footer: 人</span><br><span class="line">  # custom pv span for the whole site</span><br><span class="line">  site_pv: true</span><br><span class="line">  site_pv_header: 总访问量</span><br><span class="line">  site_pv_footer: 次</span><br><span class="line">  # custom pv span for one page only</span><br><span class="line">  page_pv: true</span><br><span class="line">  page_pv_header: &lt;i class=&quot;fa fa-file-o&quot;&gt;&lt;/i&gt;  阅读数</span><br><span class="line">  page_pv_footer:</span><br></pre></td></tr></table></figure><p><strong>上述方法好像没有用！！！</strong><br>尝试换了CDN源，没有用，排除源的问题；<br>修改了Hexo配置的语言，修改为仅有中文也不行<br>问题来源：（导航栏）请在导航的配置里，自己修改成想要的中文；应该是同一个问题？</p><h2 id="字数统计："><a href="#字数统计：" class="headerlink" title="字数统计："></a>字数统计：</h2><p>打开hexo工作目录<br><code>npm install hexo-wordcount --save</code><br>修改主题配置文件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">wordcount:</span><br><span class="line">    enable: true</span><br><span class="line">    post_wordcount: true</span><br><span class="line">    min2read: true</span><br><span class="line">    total_wordcount: true</span><br></pre></td></tr></table></figure><h2 id="配置RSS源："><a href="#配置RSS源：" class="headerlink" title="配置RSS源："></a>配置RSS源：</h2><p>安装hexo-generator-feed插件:<code>npm install hexo-generator-feed --save</code><br>配置_config.yml,输入如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"># Extensions</span><br><span class="line">plugins:</span><br><span class="line">  hexo-generator-feed</span><br><span class="line">#Feed Atom</span><br><span class="line">feed:</span><br><span class="line">  type: atom</span><br><span class="line">  path: atom.xml</span><br><span class="line"> limit: 20</span><br><span class="line">  hub:</span><br><span class="line"> content:</span><br><span class="line">  content_limit: 140</span><br><span class="line"> content_limit_delim: &#x27; &#x27;</span><br><span class="line">  order_by: -date</span><br></pre></td></tr></table></figure><p>打开主题的<code>_config.butterfly.yml</code>在<code>social: </code>下添加如下代码：<code> fab fa-rss: /atom.xml</code><br>重新生成，完成</p><h2 id="帧数统计："><a href="#帧数统计：" class="headerlink" title="帧数统计："></a>帧数统计：</h2><h2 id="评论："><a href="#评论：" class="headerlink" title="评论："></a>评论：</h2><h1 id="五、自定义魔改缝合部分"><a href="#五、自定义魔改缝合部分" class="headerlink" title="五、自定义魔改缝合部分"></a>五、自定义魔改缝合部分</h1><h2 id="滚动状态百分比：-1"><a href="#滚动状态百分比：-1" class="headerlink" title="滚动状态百分比："></a>滚动状态百分比：</h2><p>主题配置文件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># show scroll percent in scroll-to-top button</span><br><span class="line">  rightside_scroll_percent: true</span><br></pre></td></tr></table></figure><p>魔改成自己想要的动画：</p><h1 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h1><p><a href="https://butterfly.js.org/posts/21cfbf15/">https://butterfly.js.org/posts/21cfbf15/</a><br><a href="https://www.jianshu.com/p/c311d31265e0">https://www.jianshu.com/p/c311d31265e0</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> blog </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/BlogTest/2023/03/22/hello-world/"/>
      <url>/BlogTest/2023/03/22/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Github + Hexo 的个人博客部署</title>
      <link href="/BlogTest/2023/03/17/Github-Hexo-%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E9%83%A8%E7%BD%B2/"/>
      <url>/BlogTest/2023/03/17/Github-Hexo-%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E9%83%A8%E7%BD%B2/</url>
      
        <content type="html"><![CDATA[<h1 id="一、所需环境"><a href="#一、所需环境" class="headerlink" title="一、所需环境"></a>一、所需环境</h1><p><strong>这是基于Github和Hexo框架所构成的个人博客，考虑是否会出Gitee版，应该会出在自己服务器上架设的版本</strong>，会把每个点的原因尽力讲清楚而不是单纯的操作指南（不然和只会执行指令的机器有什么区别呢？）<br>1.远程类：git（代码管理工具，可以用其推送至远程仓库等）<br>2.脚本类：Node.js（脚本语言）<br>3.环境框架：Hexo（博客框架，使用Markdown格式书写）<br>4.文本编辑器：可以编辑md文件的，待补充，暂时使用的是VScode<br>5.其他：</p><h1 id="二、git、nodejs等环境的安装"><a href="#二、git、nodejs等环境的安装" class="headerlink" title="二、git、nodejs等环境的安装"></a>二、git、nodejs等环境的安装</h1><h2 id="1-安装："><a href="#1-安装：" class="headerlink" title="1.安装："></a>1.安装：</h2><p>git网址：<a href="https://git-scm.com/download/win">https://git-scm.com/download/win</a><br>nodejs网址：<a href="https://nodejs.org/en">https://nodejs.org/en</a><br>检查是否安装成功：在命令行（Win+R，输入cmd）中输入<code>git -version</code>（-v 也行），若出现（补张图）版本号，git安装成功；同样是命令行输入<code>node -v</code>，出现版本号就成功了；不知道是否需要手动添加环境变量，貌似不用；</p><h2 id="2-Git的配置："><a href="#2-Git的配置：" class="headerlink" title="2.Git的配置："></a>2.Git的配置：</h2><p>（1）配置用户名：git config –global user.name “此处写用户名”<br>（2）配置邮箱：git config –global user.name”此处写邮箱”<br>（3）查找.gitconfig文件：位置一般在C:&#x2F;Users&#x2F;[username]&#x2F;.gitconfig；编辑器打开看[user]栏是否出现设置的用户名和邮箱账号(补图)<br>（4）建立项目：（创建GitHub账户略）新建一个名为：用户名.github.io的仓库(<strong>必须是此格式！！</strong>)（补个图）；邮箱需要验证才能正常使用github功能<br>（5）ssh密钥登陆：此方式相比用户名和密码登陆保密性高，更实用；①创建：<code>ssh-keygen-t rsa -C &quot;xxxx@xxx.com&quot;</code>；②（补图）可以考虑额外的措施，一般直接回车3次确认；③生成的文件为 id_rsa id_rsa.pub 存放在 C:\Users\admin.ssh 文件夹下；④添加 ssh key：打开上述文件或者在git中输入：<code>cat ~/.ssh/id_rsa.pub</code>查询key，然后进入：settings\deploy keys\add deploy key(补图) Title：最好填写和终端有关的信息，方便区分；Key：复制上述查询内容</p><p>3.安装Hexo框架：<br>（1）初始化：命令行安装（<strong>不是Git！！！</strong>）npm(Node.js 包管理工具)输入：<code>npm install </code><strong>新版Nodejs已经集成了，无需额外安装！！！</strong>；测试是否安装完成：命令行中输入 <code>npm -v</code>，出现版本号就说明安装成功<br>（2）命令行安装Hexo：基于上一步的npm，命令：<code>npm install -g hexo -cli</code>；安装完成后输入<code>hexo -v</code>，出现版本行则安装成功<br>（3）本地硬盘新建文件夹（<strong>记住这个位置</strong>），作为存放代码的地方；<br>（4）在（3）中创建的文件夹右键鼠标，点击 Git Bash；执行如下命令：<br><code>hexo init</code> ：初始化命令，自动下载文件到此目录；<br><code>hexo g</code>：生成命令，完成框架；<br><code>hexo s</code>：启动本地预览服务，打开链接 <a href="http://localhost:4000/">http://localhost:4000</a>  可看到初始化是否成功；若加载不出来，考虑一下是否是4000端口被占用了，若是则关闭一下</p><h1 id="三、本地项目的构建"><a href="#三、本地项目的构建" class="headerlink" title="三、本地项目的构建"></a>三、本地项目的构建</h1><h1 id="四、推送到Github"><a href="#四、推送到Github" class="headerlink" title="四、推送到Github"></a>四、推送到Github</h1><p><strong>先要在Github上建立项目！</strong>建立了项目之后再生成ssh密钥并登录（见上文）</p><h2 id="1-补充："><a href="#1-补充：" class="headerlink" title="1.补充："></a>1.补充：</h2><p>在此目录下安装hexo-deployer-git插件：<code>npm install hexo-deployer-git --save</code>；编辑目录下的_config.yml文件，修改配置文件（此处有问题，自己）</p><h2 id="2-建立分支："><a href="#2-建立分支：" class="headerlink" title="2.建立分支："></a>2.建立分支：</h2><p>利用分支作为修改文件，master作为访问文件，方便多处终端修改<br>注意：克隆远程仓库到本地时不要账户名，直接使用：<code>git clone git@github.com:xxxxxx/xxxxxx.git</code>即可</p><h2 id="3-配置："><a href="#3-配置：" class="headerlink" title="3.配置："></a>3.配置：</h2><p>修改目录下的_cofig.yml文件，在文件末尾修改配置文件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: &#x27;git&#x27;</span><br><span class="line">  repo:https://github.com/用户名/项目名.git 或者 git@github.com:用户名/项目名.git//(http或者ssh都可以)</span><br><span class="line">  branch: main  //也可以单独设置个分支专用于更新</span><br></pre></td></tr></table></figure><h2 id="4-推送："><a href="#4-推送：" class="headerlink" title="4.推送："></a>4.推送：</h2><p>（1）仅修改文章内容：<br><code>hexo clean</code>：清除本地项目<br><code>hexo g</code>：重新生成<br><code>hexo s</code>：开启本地预览<br><code>hexo d</code>：推送到Github<br>浏览器输入相对的域名，查看是否更新！若有页面无更新，考虑多用几次CTRL + F5 刷新（一次不一定刷新的出来）<br>（2）如果是多终端同步：<br>注意git仓库内容的同步<br><code>git add .</code>：检查本地文件的变动<br><code>git commit -m &#39;注释内容&#39;</code>：给推送文件写上注释，养成好习惯，更新啥就写啥，方便后续管理<br><code>git push</code>:推送到github，注意这里改变的是源文件内容</p><h1 id="五、博客本身的优化"><a href="#五、博客本身的优化" class="headerlink" title="五、博客本身的优化"></a>五、博客本身的优化</h1><h2 id="1-主题问题："><a href="#1-主题问题：" class="headerlink" title="1.主题问题："></a>1.主题问题：</h2><p>使用分支更新的方式会导致不能直接在分支目录中从仓库 <code>git clone</code>想要的主题，只能先从其他地方clone过来，主要原因是直接clone会生成.git目录，一个git仓库中不能包含另一个git仓库</p><p>设置主题的方法（以butterfly为例）：<br>Hexo根目录安装：<code>git clone -b master https://github.com/jerryc127/hexo-theme-butterfly.git themes/butterfly</code>，安装完成后记得把.git文件夹删掉<br>修改_config.yml文件：<code>theme: butterfly</code><br>安装插件（pug和stylus的渲染器）：<code>npm install hexo-renderer-pug hexo-renderer-stylus --save</code><br>升级主题：在hexo根目录创建<code>config.butterfly.yml</code>,其中内容由<strong>主题</strong>目录中的<code>_config.yml</code>复制过来，不要删掉源文件，以后只需在<code>config.butterfly.yml</code>进行配置，hexo会自动合并，优先外面的<code>config.butterfly.yml</code>配置信息</p><h2 id="2-图片上传问题："><a href="#2-图片上传问题：" class="headerlink" title="2.图片上传问题："></a>2.图片上传问题：</h2><p>若使用markdown格式，就只能本地图片位置目录或者网页链接，不能直接放在md文件里；<br>需要修改_config.yml，将<code>post_asset_folder: false</code>改为<code>ture</code>，此方式不好用！<br>插件方法：hexo-renderer-marked，用命令<code>npm install hexo-renderer-marked</code>安装，再在_config.yml更改配置：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">post_asset_folder: true</span><br><span class="line"> marked:</span><br><span class="line">    prependRoot: true</span><br><span class="line">    postAsset: true</span><br></pre></td></tr></table></figure><p>更方便的方法：配合markdown编辑器</p><h2 id="3-更新问题："><a href="#3-更新问题：" class="headerlink" title="3.更新问题："></a>3.更新问题：</h2><p>更新速度偏慢；自动更新检测：；</p><h2 id="4-字体问题："><a href="#4-字体问题：" class="headerlink" title="4.字体问题："></a>4.字体问题：</h2><p>想用：<a href="https://github.com/lxgw/LxgwWenKai-Screen">https://github.com/lxgw/LxgwWenKai-Screen</a> 作为网页的显示字体<br>方法：<a href="https://github.com/chawyehsu/lxgw-wenkai-webfont">https://github.com/chawyehsu/lxgw-wenkai-webfont</a><br>（1）利用本地文件修改：<a href="https://moonshuo.cn/posts/1481.html#%E4%B8%8B%E8%BD%BD">https://moonshuo.cn/posts/1481.html#%E4%B8%8B%E8%BD%BD</a> （方法待整理）；试了很多次，都失败，怀疑是否是字体问题，更换了也失败；文件放入了没有作用；<br>（2）利用CDN修改：（过程待补充）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">font-family: &quot;LXGW WenKai Screen&quot;~~, sans-serif;~~</span><br><span class="line">……</span><br><span class="line">head:</span><br><span class="line">  - &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.jsdelivr.net/npm/lxgw-wenkai-screen-webfont@1.1.0/style.css&quot; /&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>预览是成功的，但是部署上去就失败了；后面将CDN源换成了国内的：<br><code>- &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.bootcdn.net/ajax/libs/lxgw-wenkai-screen-webfont/1.6.0/style.min.css&quot; /&gt;</code><br>就成功了；看看能不能两个链接复用，应对内外访问的情况&#x2F;自己建立CDN库<br>（3）npm部署方式：还未成功，主要是找不到使用的主题的<code>style.css</code>；突然想到和(1)一样的方法，在建立的新文件中插入链接？不过不在一个大文件夹中，有时间移到同一个文件夹试试<br>（4）tips查看网页中的字体：F12 → 选择元素 → computed → 最底部的文字；除了字体，还可以看字体来源是本地文件还是网页来判断使用情况</p><h1 id="六、博客本身的结构设计（待补充）"><a href="#六、博客本身的结构设计（待补充）" class="headerlink" title="六、博客本身的结构设计（待补充）"></a>六、博客本身的结构设计（待补充）</h1><h2 id="1-主题页面"><a href="#1-主题页面" class="headerlink" title="1.主题页面"></a>1.主题页面</h2><h2 id="2-标签页"><a href="#2-标签页" class="headerlink" title="2.标签页"></a>2.标签页</h2><h2 id="3-分类页"><a href="#3-分类页" class="headerlink" title="3.分类页"></a>3.分类页</h2><h2 id="4-图库"><a href="#4-图库" class="headerlink" title="4.图库"></a>4.图库</h2><h2 id="5-子页面"><a href="#5-子页面" class="headerlink" title="5.子页面"></a>5.子页面</h2><h2 id="6-404页面"><a href="#6-404页面" class="headerlink" title="6.404页面"></a>6.404页面</h2><h1 id="七、注意事项"><a href="#七、注意事项" class="headerlink" title="七、注意事项"></a>七、注意事项</h1><h2 id="1-同步和更新的区别："><a href="#1-同步和更新的区别：" class="headerlink" title="1.同步和更新的区别："></a>1.同步和更新的区别：</h2><p>同步指的是不同终端的原始文件的同步，使用的命令依次为：<code>git add .</code>, <code>git commit -m &#39;(更新备注)&#39;</code>，<code>git push</code>；每次要更新内容时，都要从仓库拉取源代码：<code>git pull</code>；保证文件是最新内容，养成良好的习惯。<br>而更新指的是网页内容本身的更新，使用的是：<code>hexo clean</code>&amp;<code>hexo g</code>，<code>hexo d</code>；若要预览则在生成后输入<code>hexo s</code>；<br>注意：git pull的时候注意系统提示的本地文件是否改动：<br>error: Your local changes to the following files would be overwritten by merge:<br>        source&#x2F;_posts&#x2F;Github-Hexo-xxxx.md<br>Please commit your changes or stash them before you merge.<br>方法：①放弃本地修改（常用）：<br>输入<code>git reset --hard</code>,<code>git pull</code>，本地代码被丢弃，不可找回；<br>②保存当前工作进度：<br><code>git stash</code>:保存当前工作进度，将所有未提交的修改（工作区与暂存区）保存至堆栈中,同样可用<code>git stash save</code>，区别是可以写注释<br><code>git pull</code>:拉取仓库内容至本地,<br><code>git stash pop</code>：将本地栈中的内容pop到本地，会将stash列表中的信息删除；而使用<code>git stash apply</code>则会保留；<br><code>git stash list</code>：存储到本地栈顶后，使用此命令查看本地存储的stash日志<br><code>git stash clear</code>：清空Git栈，原来stash的节点都会被清除<br>所以要要养成好习惯，每次修改完成后及时推送，不然会出现此问题；</p><h1 id="八、后续更新"><a href="#八、后续更新" class="headerlink" title="八、后续更新"></a>八、后续更新</h1><h2 id="1-如何写一篇博客"><a href="#1-如何写一篇博客" class="headerlink" title="1.如何写一篇博客"></a>1.如何写一篇博客</h2><h2 id="2-自己主题的缝合与魔改"><a href="#2-自己主题的缝合与魔改" class="headerlink" title="2.自己主题的缝合与魔改"></a>2.自己主题的缝合与魔改</h2><h2 id="3-代码相关知识"><a href="#3-代码相关知识" class="headerlink" title="3.代码相关知识"></a>3.代码相关知识</h2><h1 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h1><p><a href="https://blog.csdn.net/qq_44732432/article/details/124714408">https://blog.csdn.net/qq_44732432/article/details/124714408</a><br><a href="https://www.jianshu.com/p/36564cf5191a">https://www.jianshu.com/p/36564cf5191a</a><br><a href="https://hexo.io/zh-cn/docs/github-pages">https://hexo.io/zh-cn/docs/github-pages</a><br><a href="https://www.dhndzwxj.top/584278389.html">https://www.dhndzwxj.top/584278389.html</a><br><a href="https://www.bilibili.com/video/BV1ts4y1f7Gu/?spm_id_from=333.1007.top_right_bar_window_custom_collection.content.click">https://www.bilibili.com/video/BV1ts4y1f7Gu/?spm_id_from=333.1007.top_right_bar_window_custom_collection.content.click</a><br><a href="https://www.jianshu.com/p/0b1fccce74e0">https://www.jianshu.com/p/0b1fccce74e0</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> blog </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>yourdick</title>
      <link href="/BlogTest/2023/03/17/yourdick/"/>
      <url>/BlogTest/2023/03/17/yourdick/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
